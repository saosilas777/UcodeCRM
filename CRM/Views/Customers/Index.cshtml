@model List<CustomerModel>

<div id="nextContactDateView">
	<form asp-controller="Customers" asp-action="ContactDateEdit" method="post">
		<div class="dateInput">
			<input type="date" name="nextContactDate" required>
			<input id="customerId" value="" name="id" hidden />
			<div class="checkBoxCalendary">
				<label for="chkCalendaryBtn">
					<input type="checkbox" id="chkCalendaryBtn" name="checkCalendary"> Agendar todos os contatos atrasados para esta data?
				</label>
			</div>

			<div class="dateInputBtn">
				<button id="nextContactDateCancel" type="button">Cancelar</button>
				<button id="nextContactDateSend" type="button">Enviar</button>
				<button id="nextContactDateSubmit" type="submit" hidden></button>
			</div>
		</div>
	</form>

</div>
<div class="main">
	@await Component.InvokeAsync("Header")

	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alertSendFile">
			<div id="spanAlert" class="spanAlert">
				<span>
					<b>@TempData["ErrorMessage"]</b>
				</span>
			</div>
		</div>

	}
	@if (TempData["SuccessMessage"] != null)
	{
		<div class="alertSendFile">
			<div id="spanAlert" class="spanAlertSuccess">
				<span>
					<b>@TempData["SuccessMessage"]</b>
				</span>
			</div>
		</div>

	}
	<div class="actionsContainer">
		<div class="envio-arquivos">
			<div class="arquivos_title">
				<span>Faça o upload de sua planilha <b class="excel">excel</b> aqui!</span>
			</div>

			<form asp-action="SendFile" asp-controller="SendFile" method="post" enctype="multipart/form-data">
				<label for="btn-send-file" class="btn btn-primary input-file col-md-2 text-center">Procurar Arquivo</label>
				<input id="btn-send-file" class="btn btn-success input-file col-md-2 text-center" name="uploadFile" type="file" multiple hidden />
				<button id="sendFileBtn" class="col-md-2 input-file-btn" type="submit">Enviar</button>
			</form>
			<a asp-action="ExportXls" asp-controller="Customers">Exportar Clientes</a>
			<div id="inputFileName"></div>
		</div>
		<div class="addCustomerBtn">
			<a asp-action="Create" asp-controller="Customers">Novo Cliente <i class="fa-solid fa-hand-pointer"></i></a>
		</div>
	</div>
	<form asp-controller="Customers" asp-action="GetByStatus" method="post" hidden>
		<input id="statusValue" value="" name="status" />
		<button id="statusSend" type="submit"></button>
	</form>
	<section id="table_row">
		<!-- <table id="myTable2" class="table_Securytis"> -->
		<div class="card">
			<div class="card_header">
				<div class="table_float">
					Clientes
					<form class="table_float-dates" asp-action="Index" asp-controller="Customers" method="get">
						<span>Buscar proximos contatos entre:</span>
						<input type="date" id="initialDate" name="initialDate" />
						<input type="date" id="finalDate" name="finalDate" />
						<button id="dataFindBtn" class="dataFindBtn findByDateBtn" type="submit"><i class="findByDateBtn fa-solid fa-magnifying-glass"></i></button>
						<span class="findByDateText">Para visualizar todos os clientes, não informe nenhuma data!</span>
					</form>
				</div>
			</div>
			<div class="card_body">
				<table id="myTable" class="myTable myTable1 display wrap">

					<thead>

						<tr>

							<th>
								Dados Principais
							</th>
							<th class="th_status">
								<select id="selection">
									<option value="Todos">Todos</option>
									<option value="Inativo">Inativo</option>
									<option value="Ativo">Ativo</option>
								</select>
							</th>
							<th>
								Última Compra
							</th>
							<th id="lastPurchase">
								R$
							</th>

							<th id="ultimoContato">
								Data Último Contato
							</th>
							<th class="maxWidth">
								Último Registro de Contato
							</th>
							<th id="proximoContato">
								Próximo Contato em:
							</th>

							<th id="prioritySorting">
								Prioridade
							</th>
							<th>
								Ações
							</th>
						</tr>
					</thead>

					<tbody id="tbody">

						@foreach (var item in Model)
						{
							<tr>

								<td id="Data">

									<p><b>Código:</b><span class="customerCode"> @item.Codigo</span></p>
									<p>
										@if (item.RazaoSocial.Length < 20)
										{
											<b>Razão Social: </b>

											@item.RazaoSocial
										}
										else
										{
											<b>Razão Social: </b>
											@item.RazaoSocial.ToString().Substring(0, 20)
										}
									</p>

									<p><b>Contato: </b>@item.Contact</p> 

									<div class="ortherData show">
										<p><b>Email: </b>@item.Emails[0].Email</p>
										<p><b>Telefone: </b>@item.Phones[0].Phone</p>
										<p>
											<b>CNPJ: </b>@item.Cnpj
										</p>
										<p><b>Cidade: </b>@item.Cidade</p>
										<p><b>Uf: </b>@item.Uf</p>
									</div>
									<button id="moreInformations">Mais... </button>

								</td>

								<td class="td_status">

									@if (item.Status == true)
									{
										<p class="status">
											Ativo
										</p>
									}
									else
									{
										<p class="status status_inactive">
											Inativo
										</p>
									}

									@{
										double purchaseValue = 0;
										string purchaseDate = "01/01/1999";
										foreach (var purchase in item.CustomerPurchases)
										{
											purchaseValue = purchase.PurchaseValue;
											if (purchase.PurchaseDate != null && purchase.PurchaseDate > DateTime.Parse(purchaseDate))
											{
												purchaseDate = purchase.PurchaseDate.ToString("yyyy/MM/dd");

											}
										}
									}
								</td>
								<td class="dateConvert">
									@purchaseDate
								</td>
								<td>
									<p>
										@purchaseValue.ToString("F2")
									</p>
								</td>

								<td>
									@if (@item.ContactRecords.Count() == 0)
									{
										<p>01/01/1999</p>
									}
									else
									{
										var count = @item.ContactRecords.Count();
										<p>@item.ContactRecords[count-1].RegistrationDate.ToShortDateString()</p>
									}
								</td>
								<td class="minWidth">
									@if (@item.ContactRecords.Count() == 0)
									{
										<p>Nenhum registro de contato</p>
									}
									else
									{
										var count = @item.ContactRecords.Count();
										<p>@item.ContactRecords[count-1].Anotation</p>
									}
								</td>
								<td class="lastPurchase">
									<p id="@item.Id">@item.NextContactDate.ToString("yyyy/MM/dd")</p>
								</td>
								<td class="priority">
									@if(item.Priority.ToString() == "green"){
										<label>
											<input id="green" class="priorityRadio priorityRadioGreen" name="@item.Id" type="radio" checked />
										</label>
									}
									else
									{
										<label>
											<input id="green" class="priorityRadio priorityRadioGreen" name="@item.Id" type="radio" />
										</label>
									}
									@if (item.Priority.ToString() == "red")
									{
										<label>
											<input id="red" class="priorityRadio priorityRadioRed" name="@item.Id" type="radio" checked />
									</label>
									}
									else{
										<label>
											<input id="red" class="priorityRadio priorityRadioRed" name="@item.Id" type="radio" />
										</label>

									}
								</td>
								<td>
									<a asp-action="Editar" asp-controller="Customers" asp-route-id="@item.Id" class="table_actions">
										<div class="contact_cta">
											<i class="fa-solid fa-pen-to-square"></i>
											<i class="fa-regular fa-trash-can"></i>
										</div>

									</a>

								</td>


							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</section>
	<form asp-action="ChangePriority" asp-controller="Customers" hidden>
		<input type="text" name="priority" id="priorityStatusChange" value="" />
		<input type="text" name="priorityId" id="priorityId" value="" />
		<button type="submit" id="prioritySubmit"></button>
	</form>


</div>
<footer class="footer">
	<p> &copy; <a href="#">U.Code</a> development</p>
	<p class="footer_link">Visite nosso site <a href="#">U.code</a> </p>
</footer>

<script>
	tbody.addEventListener('change',(e)=>{

		document.getElementById("priorityId").value = e.target.getAttribute('name')
		document.getElementById("priorityStatusChange").value = e.target.getAttribute("id")
		document.getElementById("prioritySubmit").click()


	})
</script>





<script>
	const tbody = document.getElementById('tbody')
	tbody.addEventListener('click', (e) => {
		if (e.target.nodeName === 'BUTTON') {
			e.target.parentNode.querySelector(".ortherData").classList.toggle("show")
		}

	})
</script>




<script>
	const selection = document.getElementById('selection')
	const statusValue = document.getElementById('statusValue')
	const statusSend = document.getElementById('statusSend')

	selection.addEventListener('change', () => {
		statusValue.value = selection.value
		statusSend.click()
	})
</script>

<script>
	const customerId = document.getElementById('customerId')
	const nextContactDateView = document.getElementById('nextContactDateView')
	const nextContactDateSend = document.getElementById('nextContactDateSend')
	const nextContactDateSubmit = document.getElementById('nextContactDateSubmit')
	const nextContactDateCancel = document.getElementById('nextContactDateCancel')




	tbody.addEventListener('click', (e) => {
		const id = e.target.getAttribute('id')
		if (id != null && e.target.closest(".lastPurchase ")) {
			nextContactDateView.style.display = 'flex'
			customerId.value = id
		}
	})
	nextContactDateSend.addEventListener('click', () => {
		nextContactDateSubmit.click()
	})
	nextContactDateCancel.addEventListener('click', () => {
		nextContactDateView.style.display = 'none'
	})

</script>
<script>
	const tableFloatDates = document.querySelector('.table_float-dates')
	const findByDateText = document.querySelector('.findByDateText')
	tableFloatDates.addEventListener('mouseover', (e) => {
		if (e.target.nodeName == 'BUTTON' || e.target.nodeName == 'I') {
			findByDateText.style.display = 'flex'
			setTimeout(function () {
				findByDateText.style.display = 'none'
			}, 5000)
		}

	})
</script>

<script src="/js/SelectTableItems.js"></script>
<script src="/js/Alerts.js"></script>


