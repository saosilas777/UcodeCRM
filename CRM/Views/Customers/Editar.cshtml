@model CRM.Models.ViewModels.CustomerEditViewModel
@{
	string date;
	date = DateTime.Parse(@Model.NextContactDate).ToString("yyyy-MM-dd");
	var lastPurchaseValue = double.Parse(Model.LastPurchaseValue.ToString());
	string lastPurchase = lastPurchaseValue.ToString("C2", new System.Globalization.CultureInfo("pt-BR"));
	int _length = 1;
}

<div class="main">
	@await Component.InvokeAsync("Header")
	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alertSendFile">
			<div id="spanAlert" class="spanAlert">
				<span>
					<b>@TempData["ErrorMessage"]</b>
				</span>
			</div>
		</div>

	}
	@if (TempData["SuccessMessage"] != null)
	{
		<div class="alertSendFile">
			<div id="spanAlert" class="spanAlertSuccess">
				<span>
					<b>@TempData["SuccessMessage"]</b>
				</span>
			</div>
		</div>

	}
	<section class="customerBody">
		<article class="customerCard">
			<div id="spanAlertContainer">
				<div id="spanAlert" class="spanAlert">
					<span>
						Deseja realmente deletar o cliente:<br />
						<b>@Model.RazaoSocial</b>
					</span>
				</div>
			</div>
			<h3>Informações</h3>

			<div class="card_container">
				<section class="registrationsContainer">
					<form asp-controller="Customers" asp-action="RegistrationContact" method="post">
						<div class="registrationsContent">
							<div class="registrationTitle">
								<h1>Registros de contato</h1>
							</div>
							@{
								if (Model.ContactRecords.Count() <= 0)
								{
										<div>
											<p>Ainda não há registros de contatos recentes</p>
										</div>
								}
								else
								{
									for (int i = 0; i <= Model.ContactRecords.Count() - 1; i++)
									{
											<div class="registrationsCard">
												<span>@Model.ContactRecords[i].RegistrationDate - @Model.RazaoSocial</span>
												<div class="contentRegistration">
													@Model.ContactRecords[i].Anotation
												</div>
											</div>
									}
								}

							}
						</div>

						<div class="registrationInput">

							<textarea id="ContactRecordsAnotation" name="anotation"></textarea>
							<div class="registrationInputCta">
								@{

										<input id="ContactRecordsDate" type="date" name="date" required />
										<input type="text" value="@Model.Id" asp-for="@Model.Id" hidden />
								}

								<button type="submit" class="card_cta-saveChanges btnInsertContact">Enviar</button>
							</div>

						</div>
					</form>
				</section>
				<form asp-action="Edit" asp-controller="Customers" method="post" class="card_content" id="EditForm">
					<input asp-for="@Model.Id" hidden />
					<div class="contentHeader">
						<span><b>Cliente:</b>@Model.RazaoSocial</span>
					</div>
					<div class="editContainer">
						<div class="contentBody">
							<div class="contentBody-inputs">
								<div>
									<label>
										Código:
										<input class="editable" value="@Model.Codigo" asp-for="@Model.Codigo" disabled />
									</label>
								</div>
								<div>
									<label>
										CNPJ:
										<input class="editable" value="@Model.Cnpj" asp-for="@Model.Cnpj" disabled />
									</label>
								</div>
								<div class="span6">
									<label>
										Razão Social:
										<input class="editable " value="@Model.RazaoSocial" asp-for="@Model.RazaoSocial" disabled />
									</label>
								</div>
								<div>
									<label>
										Comprador(es)
										<input class="editable" value="@Model.Contact" asp-for="@Model.Contact" disabled />
									</label>
								</div>
								<div>
									<label for="select_disabled">
										Status:
										<select class="editable" type="text" value="@Model.Status" asp-for="@Model.Status"
												disabled>
											<option value="true">Ativo</option>
											<option value="false">Inativo</option>
										</select>
									</label>
								</div>
								@foreach (var item in Model.Phones)
								{
									<div id="phoneNumber">
										<label >
											Telefone <button type="button" id="addPhoneNumber"><i class="fa-solid fa-plus"></i></button>
											<input class="editable" value="@item.Phone" asp-for="@Model.Phones" name="Phones" disabled />
										</label>
										
										
									</div>
									if (Model.Phones.Count() < 3)
									{

									}
								}

								@foreach (var item in Model.Emails)
								{
									<div id="addEmail">
										<label class="">
											Email @*@_length*@<button type="button" id="addEmailBtn"><i class="fa-solid fa-plus"></i></button>
											<input class="editable" value="@item.Email" asp-for="@Model.Emails" name="Emails" disabled />
										</label>
										
									
									</div>
								}
								<div>
									<label>
										Cidade:
										<input class="editable" value="@Model.Cidade" asp-for="@Model.Cidade" disabled />
									</label>
								</div>
								<div>
									<label>
										UF:
										<input class="editable" value="@Model.Uf" asp-for="@Model.Uf" disabled />
									</label>
								</div>
								<div>
									<label>
										Data última compra:
										<input class="editable" type="date" value="@Model.LastPurchaseDate.ToString("yyyy-MM-dd")" asp-for="@Model.LastPurchaseDate" disabled />
									</label>
								</div>
								<div>
									<label>
										Última compra:
										<input id="lastPurchaseValue" class="editable" value="@lastPurchase" asp-for="@Model.LastPurchaseValue" name="LastPurchaseValue" disabled />
									</label>
								</div>
								@{

										<div>
											<label>
												Próximo contato:
												<input class="editable" id="reciver" type="date" value="@date" asp-for="@Model.NextContactDate" disabled />
											</label>
										</div>

								}

							</div>



						</div>
						<div class="card_cta">
							<div id="editOrDelete">
								<button type="button" class="card_cta-edit" id="btnEdit">Editar</button>
								<button type="button" class="card_cta-delet" id="deletarBtn">Deletar</button>
							</div>
							<div id="cancelOrSave">
								<button type="reset" class="card_cta-delet cancelDelete" id="cancelEdit">Cancelar</button>
								<button type="button" class="card_cta-saveChanges" id="card_cta-saveChanges">Salvar</button>
							</div>

							<div class="spanAlertContainer" id="deleteConfirm">
								<button type="reset" class="card_cta-delet cancelDelete" id="cancelDelete">Cancelar</button>
								<button type="button" class="card_cta-saveChanges" id="confirmDelete">Confirmar</button>
							</div>
							<button id="btnSubmitDelete" class="btnSubmit" type="submit" asp-action="Delete" disabled></button>
							<button id="btnSubmitEdit" class="btnSubmit" type="submit" asp-action="Edit" disabled></button>
						</div>
					</div>
				</form>
			</div>
		</article>
	</section>

</div>
<footer class="footer">
	<p> &copy; <a href="#">U.Code</a> development</p>
	<p class="footer_link">Visite nosso site <a href="#">U.code</a> </p>
</footer>

<script src="~/js/InsertNewFieldEditView.js"></script>
<script src="/js/customer.js"></script>
<script src="/js/Alerts.js"></script>

